# -*- coding: utf-8 -*-
"""3.Cluster analysis for genres.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qcLsxvGzNtKPYsm9qp6-3pJXFk53ohVE
"""

import os, glob
from google.colab import drive
drive.mount('/content/drive')
path = "/content/drive/My Drive/Recommend System"

import pandas as pd
from pandas import DataFrame,Series
import json
import csv

os.chdir(path)
os.listdir(path)

cc=pd.read_csv('no_missing_result_week10_3.csv')

dx=pd.read_csv("Processed_data.csv")
dx

lab=dx.drop_duplicates(subset=['label'],keep='first',inplace=False)
lab=lab[['label']].reset_index(drop=True)
lab

import numpy as np

nr_ids = np.unique(lab)
visGrid = np.zeros((len(nr_ids), len(nr_ids)))
visGrid

from tqdm.notebook import tqdm

for i in range(len(lab)):
    lab.loc[i,'no']=i
movie=dx.drop_duplicates(subset=['id'],keep='first',inplace=False)
movie=movie[['id']].reset_index(drop=True)
for i in tqdm(range(0,len(movie))):
    id=movie.loc[i,'id']
    dxx=dx[dx['id']==id].reset_index(drop=True)
    for j in range(len(dxx)):
        for k in range(len(dxx)):
            labelj=dxx.loc[j,'label']
            laj=lab[lab['label']==dxx.loc[j,'label']].reset_index(drop=True)
            lak=lab[lab['label']==dxx.loc[k,'label']].reset_index(drop=True)
            noj=int(laj.loc[0,'no'])
            nok=int(lak.loc[0,'no'])
            visGrid[noj][nok]=visGrid[noj][nok]+1

import seaborn as sns
annot_lookup = []
for i in range(len(nr_ids)):
    annot_lookup.append(nr_ids[i])
sns.heatmap(visGrid, xticklabels=annot_lookup, yticklabels=annot_lookup)

for i in tqdm(range(len(lab))):
    label=lab.loc[i,'label']
    ds=dx[dx['label']==label]
    lab.loc[i,'count']=len(ds)
lab

import matplotlib.pyplot as plt
plt.rcParams['font.sans-serif'] = ['SimHei']
plt.rcParams['axes.unicode_minus'] = False
dis=lab
a = dis['label']
b = dis['count']
plt.barh(a, b)  
plt.title('Movie type frequency')
plt.show()

from sklearn.cluster import SpectralCoclustering
model = SpectralCoclustering(n_clusters=5)
model.fit(visGrid)

fit_data = visGrid[np.argsort(model.row_labels_)]
fit_data = fit_data[:, np.argsort(model.column_labels_)]

annot_lookup_sorted = []
for i in np.argsort(model.row_labels_):
    annot_lookup_sorted.append(nr_ids[i])

sns.heatmap(fit_data, xticklabels=annot_lookup_sorted, yticklabels=annot_lookup_sorted, annot=False)
plt.title("After biclustering; rearranged to show biclusters")

plt.show()