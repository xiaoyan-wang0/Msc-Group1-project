# -*- coding: utf-8 -*-
"""2.online data processing-recommend by movie category.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YooHpCuuHOOqD3pqC49QH6qg9TqMIFRQ
"""

import os, glob
from google.colab import drive
drive.mount('/content/drive')
path = "/content/drive/My Drive/Recommend System"

import pandas as pd
from pandas import DataFrame,Series
import json
import csv

os.chdir(path)
os.listdir(path)

df=pd.read_csv("no_missing_result_week10_3.csv")

df.info()

df

genre = df['genre_ids']
genre

genre = genre.str.strip('[]')
genre

genre1=genre.to_frame()
genre1

y = pd.DataFrame((x.split(',') for x in genre))
y

nmr=df[['title', 'id', 'overview', 'genre_ids','popularity']]
nmr

df=pd.merge(nmr, y, left_index=True,right_index=True)
dx=nmr.copy()
dx=nmr[0:0]
dx

df

df.iloc[:,5:12]

len(df)

from tqdm.notebook import tqdm
import numpy as np 
from time import sleep

for i in tqdm(range(len(df))):
    a=df[i:i+1]
    a=a.iloc[:,5:12].dropna(axis=1, how='any')
    a_list =np.array(a).tolist()
    popularity=df.loc[i,'popularity']
    title=df.loc[i,'title']
    id=df.loc[i,'id']
    overview=df.loc[i,'overview']
    for j in a_list[0]:
        dx = dx.append([{'title': title,'id': id,'overview':overview,'popularity':popularity,'genre_ids':j}], ignore_index=True)

dx=dx[-(dx['genre_ids']=='')].reset_index(drop=True)

from tqdm.notebook import tqdm
import numpy as np 
from time import sleep

for i in tqdm(range(len(df))):
    a=df[i:i+1]
    a=a.iloc[:,5:12].dropna(axis=1, how='any')
    a_list =np.array(a).tolist()
    title=df.loc[i,'title']
    id=df.loc[i,'id']
    overview=df.loc[i,'overview']
    popularity=df.loc[i,'popularity']
    for j in a_list[0]:
        dx = dx.append([{'title': title,'id': id,'overview':overview,'popularity':popularity,'genre_ids':j}], ignore_index=True)
dx=dx[-(dx['genre_ids']=='')].reset_index(drop=True)

dx

dx.loc[(dx['title'] == 'Shang-Chi and the Legend of the Ten Rings')]

dx.to_csv('Processed_data.csv')

num_to_label = {
    '28':'Action',
    '12':'Adventure',
    '16':'Animation',
    '35':'Comedy',
    '80':'Crime',
    '99':'Documentary',
    '18':'Drama',
    '10751':'Family',
    '14':'Fantasy',
    '36':'History',
    '27':'Horror',
    '10402':'Music',
    '9648':'Mystery',
    '10749':'Romance',
    '878':'Science Fiction',
    '10770':'TV Movie',
    '53':'Thriller',
    '10752':'War',
    '37':'Western'
    }

dx['genre_ids']=dx.apply(lambda x:(x['genre_ids'].replace(" ", "")), axis=1)
dx['label']=dx.apply(lambda x:(num_to_label[x['genre_ids']]), axis=1)
dx

#1.Drama
Drama=dx.loc[(dx['label'] == 'Drama') & (dx['popularity']>100)].head(25)
Drama

#2.Comedy
Comedy=dx.loc[(dx['label'] == 'Comedy') & (dx['popularity']>100)].head(25)
Comedy

#3.Action
Action=dx.loc[(dx['label'] == 'Action') & (dx['popularity']>100)].head(25)
Action

#4.Romance
Romance=dx.loc[(dx['label'] == 'Romance') & (dx['popularity']>100)].head(25)
Romance

#5.Thriller
Thriller=dx.loc[(dx['label'] == 'Thriller') & (dx['popularity']>100)].head(25)
Thriller